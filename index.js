import{S as v,a as b,i as l}from"./assets/vendor-BjRz3xa9.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const p=document.querySelector(".gallery"),u=document.querySelector(".load-more"),m=document.getElementById("loader"),w=new v(".gallery a",{captionsData:"alt",captionDelay:250});function f(t){const r=t.map(({webformatURL:s,largeImageURL:a,tags:e,likes:o,views:i,comments:y,downloads:L})=>`
       <li class="gallery-item">
          <a class="gallery-link" href="${a}">
            <img class="gallery-image" src="${s}" alt="${e}" />
            <div class="info">
              <p><span class="label">Likes</span><span class="value">${o}</span></p>
              <p><span class="label">Views</span><span class="value">${i}</span></p>
              <p><span class="label">Comments</span><span class="value">${y}</span></p>
              <p><span class="label">Downloads</span><span class="value">${L}</span></p>
            </div>
          </a>
        </li>
      `).join("");p.insertAdjacentHTML("beforeend",r),w.refresh()}function S(){p.innerHTML=""}function q(){m.classList.remove("is-hidden")}function B(){m.classList.add("is-hidden")}function E(){u.classList.remove("is-hidden")}function g(){u.classList.add("is-hidden")}const M="https://pixabay.com/api/",$="49539042-7a7029324b91a0a3f345412f4";async function h(t,r=1){const s={key:$,q:t,image_type:"photo",safesearch:!0,page:r,per_image:15};try{return q(),(await b.get(M,{params:s})).data}catch{throw new Error("Failed to fetch images")}finally{B()}}const P=document.querySelector(".form"),R=document.querySelector(".load-more");let c="",n=1,d=0;P.addEventListener("submit",async t=>{if(t.preventDefault(),c=t.target.elements["search-text"].value.trim(),n=1,!c){l.error({message:"Empty input, enter a search value!",position:"topRight"});return}S(),g();try{const r=await h(c,n),{hits:s,totalHits:a}=r;if(s.length===0){l.error({message:"Sorry, no images match your query. Try again!",position:"topRight"});return}f(s),d=Math.ceil(a/15),n<d&&E()}catch{l.error({message:"Something went wrong",position:"topRight"})}});R.addEventListener("click",async()=>{n+=1;try{const t=await h(c,n);f(t.hits),O(),n>=d&&(g(),l.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch{l.error({message:"Failed to load more images",position:"topRight"})}});function O(){const t=document.querySelector(".gallery-item");if(t){const r=t.getBoundingClientRect().height;window.scrollBy({top:r*2,behavior:"smooth"})}}
//# sourceMappingURL=index.js.map
